---
import '../styles/tailwind.css'
import '../assets/scss/index.scss'
import SiteMeta from '../components/SiteMeta.astro'
import LocalizedMeta from '../components/LocalizedMeta.astro'
import Header from '../components/Header.astro'
import Breadcrumbs from '../components/Breadcrumbs.astro'
import Footer from '../components/Footer.astro'
import { getLocaleFromUrl } from '../utils/i18n'
import { getAlternateUrls } from '../utils/i18n'
import { ClientRouter } from 'astro:transitions'

interface Props {
  title?: string
  description?: string
  url?: string
  image?: string
  author?: string
  jsonLd?: any
  pageKey?: string
  useLocalizedMeta?: boolean
  enableTransitions?: boolean
}

const {
  title = 'Stefano Chermaz — Consulenza IT (M365, AI, DORA/GDPR)',
  description = 'Progetti affidabili e scalabili su Microsoft 365 e AI. Modern Workplace, automazioni, chatbot e governance.',
  url = Astro.site,
  image = 'social-preview-image.png',
  author = 'Stefano Chermaz',
  jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'Organization',
    name: 'Stefano Chermaz — Consulenza IT',
    url: Astro.site,
    sameAs: ['https://www.linkedin.com/in/stefanochermaz/'],
  },
  pageKey,
  useLocalizedMeta = false,
  enableTransitions = false
} = Astro.props as Props

const locale = getLocaleFromUrl(Astro.url)
---

<html lang={locale} dir="ltr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <!-- favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="theme-color" content="#1f63ff" />

    {useLocalizedMeta ? (
      <LocalizedMeta title={title} description={description} pageKey={pageKey} ogImage={image} />
    ) : (
      <SiteMeta title={title} description={(description||'').substring(0, 150)} url={url} image={image} author={author} />
    )}

    <slot name="head" />
    
    <!-- hreflang alternates -->
    {(() => {
      const urls = getAlternateUrls(Astro.url.pathname)
      return (
        <>
          <link rel="alternate" hrefLang="x-default" href={urls['x-default']} />
          <link rel="alternate" hrefLang="it" href={urls['it']} />
          <link rel="alternate" hrefLang="en" href={urls['en']} />
          <link rel="alternate" hrefLang="sl" href={urls['sl']} />
        </>
      )
    })()}

    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    
    <!-- Matomo -->
    <script>
      var _paq = window._paq = window._paq || [];
      /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
      _paq.push(['trackPageView']);
      _paq.push(['enableLinkTracking']);
      (function() {
        var u="https://statistics.crowdm.it/";
        _paq.push(['setTrackerUrl', u+'matomo.php']);
        _paq.push(['setSiteId', '8']);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
      })();
    </script>
    <!-- End Matomo Code -->
    
    <!-- Temporary disable view transitions for debugging -->
    <!-- {enableTransitions && <ClientRouter />} -->
  </head>
  
  <body>
    
    <Header />
    <div class="container">
      <Breadcrumbs currentLabel={title} />
    </div>
    <main id="main-content">
      <slot />
    </main>
    <Footer />
    
    <script>
      // Semplice sincronizzazione dark mode una tantum
      function syncDarkMode() {
        const html = document.documentElement
        const body = document.body
        
        // Sincronizza solo una volta all'avvio
        if (html.classList.contains('darkmode') || body.classList.contains('darkmode')) {
          html.classList.add('dark')
          body.classList.add('dark')
        }
      }
      
      // Esegui solo al caricamento iniziale
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', syncDarkMode)
      } else {
        syncDarkMode()
      }
    </script>
    
    <style lang="scss" is:global>
      // Layout semplice e stabile
      html, body {
        min-height: 100vh;
      }

      body {
        display: flex;
        flex-direction: column;
        
        main {
          flex: 1;
        }
      }

      // Navigation mobile
      #main-navigation {
        position: relative;
        z-index: 50;
      }
    </style>
  </body>
</html>