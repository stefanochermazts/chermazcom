---
import '../styles/tailwind.css'
import '../assets/scss/index.scss'
import SiteMeta from '../components/SiteMeta.astro'
import LocalizedMeta from '../components/LocalizedMeta.astro'
import Header from '../components/Header.astro'
import Breadcrumbs from '../components/Breadcrumbs.astro'
import Footer from '../components/Footer.astro'
import { getLocaleFromUrl } from '../utils/i18n'
import { getAlternateUrls } from '../utils/i18n'
import { ClientRouter } from 'astro:transitions'

interface Props {
  title?: string
  description?: string
  url?: string
  image?: string
  author?: string
  jsonLd?: any
  pageKey?: string
  useLocalizedMeta?: boolean
  enableTransitions?: boolean
}

const {
  title = 'Stefano Chermaz — Consulenza IT (M365, AI, DORA/GDPR)',
  description = 'Progetti affidabili e scalabili su Microsoft 365 e AI. Modern Workplace, automazioni, chatbot e governance.',
  url = Astro.site,
  image = 'social-preview-image.png',
  author = 'Stefano Chermaz',
  jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'Organization',
    name: 'Stefano Chermaz — Consulenza IT',
    url: Astro.site,
    sameAs: ['https://www.linkedin.com/in/stefanochermaz/'],
  },
  pageKey,
  useLocalizedMeta = false,
  enableTransitions = false
} = Astro.props as Props

const locale = getLocaleFromUrl(Astro.url)
---

<html lang={locale} dir="ltr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <script>
      // Inizializza il tema PRIMA dei CSS, coerente con Accessible Astro Components
      (function() {
        try {
          var ls = localStorage.getItem('theme') || localStorage.getItem('aac-theme') || ''
          var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
          var isDark = ls ? ls === 'dark' : prefersDark
          var html = document.documentElement
          if (isDark) {
            html.classList.add('dark')
            html.classList.add('darkmode')
          } else {
            html.classList.remove('dark')
            html.classList.remove('darkmode')
          }
          
        } catch (e) {}
      })
    </script>

    <!-- favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/images/logo_stefano_chermaz_sm.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="theme-color" content="#1f63ff" />

    {useLocalizedMeta ? (
      <LocalizedMeta title={title} description={description} pageKey={pageKey} ogImage={image} />
    ) : (
      <SiteMeta title={title} description={(description||'').substring(0, 150)} url={url} image={image} author={author} />
    )}

    <slot name="head" />
    
    <!-- hreflang alternates -->
    {(() => {
      const urls = getAlternateUrls(Astro.url.pathname)
      return (
        <>
          <link rel="alternate" hrefLang="x-default" href={urls['x-default']} />
          <link rel="alternate" hrefLang="it" href={urls['it']} />
          <link rel="alternate" hrefLang="en" href={urls['en']} />
          <link rel="alternate" hrefLang="sl" href={urls['sl']} />
        </>
      )
    })()}

    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    
    <!-- Matomo -->
    <script>
      var _paq = window._paq = window._paq || [];
      _paq.push(['trackPageView']);
      _paq.push(['enableLinkTracking']);
      (function() {
        var u="https://statistics.crowdm.it/";
        _paq.push(['setTrackerUrl', u+'matomo.php']);
        _paq.push(['setSiteId', '8']);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
      })();
    </script>
    <!-- End Matomo Code -->
    
    <!-- Temporary disable view transitions for debugging -->
    <!-- {enableTransitions && <ClientRouter />} -->
  </head>
  
  <body>
    <a href="#main-content" class="sr-only focus:not-sr-only focus:fixed focus:top-2 focus:left-2 focus:z-50 focus:rounded-md focus:bg-brand-600 focus:px-3 focus:py-2 focus:text-white">Salta al contenuto</a>
    
    <Header />
    <div class="container">
      <Breadcrumbs currentLabel={title} />
    </div>
    <main id="main-content">
      <slot />
    </main>
    <Footer />
    
    <style lang="scss" is:global>
      html, body { min-height: 100vh; }
      body { display: flex; flex-direction: column; main { flex: 1; } }
      #main-navigation { position: relative; z-index: 50; }
      
      /* Fix per dark mode - applica gli stili dark quando html ha classe darkmode */
      .darkmode {
        /* Forza Tailwind a riconoscere le varianti dark: */
        .dark\:bg-zinc-900 { background-color: rgb(24 24 27) !important; }
        .dark\:bg-zinc-800 { background-color: rgb(39 39 42) !important; }
        .dark\:text-zinc-50 { color: rgb(250 250 250) !important; }
        .dark\:text-zinc-100 { color: rgb(244 244 245) !important; }
        .dark\:text-zinc-300 { color: rgb(212 212 216) !important; }
        .dark\:text-zinc-400 { color: rgb(161 161 170) !important; }
        .dark\:ring-white\/10 { --tw-ring-color: rgb(255 255 255 / 0.1) !important; }
        .dark\:bg-zinc-900\/50 { background-color: rgb(24 24 27 / 0.5) !important; }
        
        /* Gradient backgrounds */
        .dark\:from-zinc-900 { --tw-gradient-from: rgb(24 24 27) var(--tw-gradient-from-position) !important; }
        .dark\:via-zinc-900 { --tw-gradient-to: rgb(24 24 27) var(--tw-gradient-to-position) !important; --tw-gradient-stops: var(--tw-gradient-from), rgb(24 24 27) var(--tw-gradient-via-position), var(--tw-gradient-to) !important; }
        .dark\:to-zinc-800 { --tw-gradient-to: rgb(39 39 42) var(--tw-gradient-to-position) !important; }
        
        /* Badge e icon colors */
        .dark\:bg-blue-900\/30 { background-color: rgb(30 58 138 / 0.3) !important; }
        .dark\:bg-green-900\/30 { background-color: rgb(20 83 45 / 0.3) !important; }
        .dark\:bg-purple-900\/30 { background-color: rgb(88 28 135 / 0.3) !important; }
        .dark\:bg-orange-900\/30 { background-color: rgb(154 52 18 / 0.3) !important; }
        .dark\:bg-amber-900\/30 { background-color: rgb(120 53 15 / 0.3) !important; }
        .dark\:bg-brand-900\/30 { background-color: rgb(9 29 82 / 0.3) !important; }
        
        .dark\:text-blue-400 { color: rgb(96 165 250) !important; }
        .dark\:text-green-400 { color: rgb(74 222 128) !important; }
        .dark\:text-green-300 { color: rgb(134 239 172) !important; }
        .dark\:text-purple-400 { color: rgb(196 181 253) !important; }
        .dark\:text-orange-400 { color: rgb(251 146 60) !important; }
        .dark\:text-amber-300 { color: rgb(252 211 77) !important; }
        .dark\:text-brand-400 { color: rgb(139 180 255) !important; }
        .dark\:text-brand-300 { color: rgb(141 180 255) !important; }
        
        /* Hover effects */
        .group:hover .dark\:group-hover\:border-brand-800 { border-color: rgb(13 43 122) !important; }
        .group:hover .dark\:group-hover\:text-brand-400 { color: rgb(139 180 255) !important; }
      }
    </style>
  </body>
</html>