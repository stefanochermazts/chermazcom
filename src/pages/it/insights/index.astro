---
import DefaultLayout from '../../../layouts/DefaultLayout.astro'
import ArticleCard from '../../../components/ArticleCard.astro'
import { getCollection } from 'astro:content'

const all = await getCollection('insights', ({ id }) => {
  const normalizedId = id.replace(/\\/g, '/')
  // I file italiani sono ora nella root (senza prefisso di lingua)
  return !normalizedId.includes('/')
})
const posts = all.sort((a,b)=> (a.data.date||'') < (b.data.date||'') ? 1 : -1)

const categories = Array.from(new Set(posts.flatMap(p => (p.data.categories ?? [])
  .map((s:string)=> s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu,'').replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,'')))))
const normalize = (s: string) => s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu, '').replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')
const postsByCategory = (cat: string) => posts.filter(p => (p.data.categories ?? []).some((c: string) => normalize(c) === cat))
---
<DefaultLayout title="Insights â€” IT">
  <section class="my-32" style="max-width:1366px;margin-inline:auto;padding-inline:1rem;">
    <h1 class="text-6xl mb-8">Insights</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
      {categories.map(cat => (
        <article class="border rounded-2xl p-6">
          <h2 class="text-2xl mb-2 capitalize">{cat}</h2>
          <p class="opacity-80 mb-4">Articoli per categoria</p>
          <a class="button" href={`/it/insights/categoria/${cat}/`}>Vai agli articoli</a>
        </article>
      ))}
    </div>

    <h2 class="text-4xl mb-6">Tutti gli articoli</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {posts.map(p => (
        <ArticleCard post={p} />
      ))}
    </div>
  </section>
</DefaultLayout>


