---
import DefaultLayout from '../../../../layouts/DefaultLayout.astro'
import { getCollection } from 'astro:content'

const normalizeCategory = (s) => s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu, '').replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')
const all = await getCollection('insights')
const cat = Astro.params.category
const posts = all.filter(p => (p.data.categories ?? []).some(c => normalizeCategory(c) === cat))

export async function getStaticPaths() {
  const collection = await getCollection('insights')
  const cats = new Set()
  const norm = (s) => s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu, '').replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')
  for (const p of collection) for (const c of (p.data.categories ?? [])) cats.add(norm(c))
  return Array.from(cats).map((slug) => ({ params: { category: slug } }))
}
---
<DefaultLayout title={`Categoria: ${cat}`}>
  <section class="container my-32">
    <h1 class="text-6xl mb-8 capitalize">{cat}</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {posts.map(p => (
        <article class="border rounded-2xl p-6">
          <h2 class="text-xl mb-2"><a href={`/it/insights/${(p.slug ?? p.id.replace(/\.mdx?$/, ''))}/`}>{p.data.title}</a></h2>
          <p class="opacity-80 text-base">{p.data.excerpt ?? ''}</p>
        </article>
      ))}
    </div>
  </section>
</DefaultLayout>


