---
import { getAlternateUrls } from '../utils/i18n'

/**
 * SiteMeta Component
 *
 * @description Component to handle site metadata and essential head elements
 */
interface Props {
  /**
   * The title of the page
   */
  title: string
  /**
   * The description of the page
   */
  description: string
  /**
   * The URL of the page
   */
  url: string
  /**
   * The image path for social sharing
   */
  image: string
  /**
   * The author of the page
   */
  author?: string
}

const { title, description, url, image, author = 'Stefano Chermaz' } = Astro.props

let subtitle = 'Stefano Chermaz'

// Use the same logic as LocalizedMeta for consistency
const currentPath = Astro.url.pathname
const canonical = Astro.url.toString()
const alternateUrls = getAlternateUrls(currentPath, Astro.site?.toString())
---

<!-- general meta -->
<meta name="title" content={`${title} - ${subtitle}`} />
<meta name="description" content={description} />
<meta name="author" content={author} />

<!-- canonical -->
<link rel="canonical" href={canonical} />

<!-- open graph -->
<meta property="og:title" content={`${title} - ${subtitle}`} />
<meta property="og:description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={url} />
<meta property="og:image" content={`${Astro.site}${image}`} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:image:alt" content={`${title} - ${subtitle}`} />

<!-- twitter card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={`${title} - ${subtitle}`} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={`${Astro.site}${image}`} />

<!-- page title -->
<title>{title} - {subtitle}</title>

<!-- hreflang -->
{Object.entries(alternateUrls).map(([lang, url]) => (
  <link rel="alternate" hreflang={lang} href={url} />
))}
