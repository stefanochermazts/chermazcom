---
const {
  eyebrow = 'Consulenza IT e AI',
  title = 'Progetti affidabili e scalabili su Microsoft 365 e AI',
  subtitle = 'Modern Workplace, automazioni, chatbot e governance. Sicurezza e performance al primo posto.',
  primary = { href: '/services/', label: 'Servizi' },
  secondary = { href: '/case-studies/', label: 'Case studies' },
  badgeValue = '15+ anni',
  badgeSubtitle = 'di esperienza'
} = Astro.props
---
<section class="relative isolate py-16 sm:py-20" data-reduce-motion="(prefers-reduced-motion: reduce)">
  <div class="mx-auto max-w-[1366px] px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-2 items-center gap-10">
      <div class="max-w-3xl">
        <p class="text-sm font-semibold text-brand-600">{eyebrow}</p>
        <h1 class="mt-3 text-4xl font-bold tracking-tight text-zinc-900 dark:text-zinc-50 sm:text-5xl">{title}</h1>
        <p class="mt-6 text-lg leading-8 text-zinc-700 dark:text-zinc-300">{subtitle}</p>
        <div class="mt-8 flex gap-3">
          <a href={primary.href} class="inline-flex items-center rounded-lg bg-brand-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-brand-500 focus:outline-2 focus:outline-offset-2 focus:outline-brand-500 will-change-transform">{primary.label}</a>
          <a href={secondary.href} class="inline-flex items-center rounded-lg ring-1 ring-zinc-300 px-4 py-2 text-sm font-semibold text-zinc-900 dark:text-zinc-50 hover:bg-zinc-50 dark:hover:bg-zinc-800 focus:outline-2 focus:outline-offset-2 focus:outline-brand-500 will-change-transform">{secondary.label}</a>
        </div>
      </div>
      <div class="w-full relative">
        <img src="/images/stefano chermaz.jpg" alt="Stefano Chermaz" class="w-full max-w-xl mx-auto rounded-2xl shadow-sm ring-1 ring-black/5 dark:ring-white/10 object-cover" loading="eager" decoding="async" />
        {badgeValue && (
          <div class="absolute -top-4 -right-4 bg-white/95 dark:bg-zinc-900/90 rounded-xl p-4 shadow-lg ring-1 ring-black/5 dark:ring-white/10">
            <div class="flex items-center space-x-3">
              <svg class="h-6 w-6 text-brand-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <div>
                <p class="text-sm font-semibold text-zinc-900 dark:text-zinc-50">{badgeValue}</p>
                {badgeSubtitle && <p class="text-xs text-zinc-600 dark:text-zinc-400">{badgeSubtitle}</p>}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</section>
<script>
  try {
    const section = document.currentScript?.closest('section')
    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches
    if (!prefersReduced && section) {
      const buttons = section.querySelectorAll('a')
      buttons.forEach((btn) => {
        btn.addEventListener('mouseenter', () => {
          btn.animate({ transform: ['translateY(0)', 'translateY(-2px)'] }, { duration: 180, easing: 'ease-out', fill: 'forwards' })
        })
        btn.addEventListener('mouseleave', () => {
          btn.animate({ transform: ['translateY(-2px)', 'translateY(0)'] }, { duration: 180, easing: 'ease-out', fill: 'forwards' })
        })
        btn.addEventListener('focus', () => {
          btn.animate({ transform: ['translateY(0)', 'translateY(-2px)'] }, { duration: 180, easing: 'ease-out', fill: 'forwards' })
        })
        btn.addEventListener('blur', () => {
          btn.animate({ transform: ['translateY(-2px)', 'translateY(0)'] }, { duration: 180, easing: 'ease-out', fill: 'forwards' })
        })
      })
    }
  } catch {}
</script>
